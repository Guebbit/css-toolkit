@use "sass:list";
@use "sass:string";
@use "../functions/colors" as color-functions;

/**
 *  Create all the needed classes for the requested colors
 *  WARNING: $gradient-* are not meant to be used in color and border classes (because they have gradients)
 *
 *  @param $color-list     - list of colors (like $colors-collection: ("branch": ( "leaf: $color" )))
 *  @param $vars: if true, use css vars instead of rgb
 *  @param $prefix: prefix that applies to classes
 *  @param $prefixV: prefix that applies to vars (if true)
 *  @param $branch-list:   - when filled: becomes a whitelist (aka: include only listed brands)
 *  @param $feature-list:  - when filled: becomes a whitelist. May become cumbersome and many are not needed. Use with care.
 *    - text
 *    - background
 *    - border
 *    - pseudo (bg only, text very rarely used)
 *    - hover
 */
@mixin create-colors($color-list: (), $vars: false, $prefix: "", $prefixV: "", $branch-list: (), $feature-list: ()) {
  // for every branch
  @each $branch-name, $branch in $color-list {
    // check that there is no $branch-list or, if present, it's correctly whitelisted
    @if list.length($branch-list) < 1 or list.index($branch-list, $branch-name) {

      // for every leaf
      @each $sname, $scolor in $branch {

        @if not list.index($branch-name, "gradient") and (list.length($feature-list) < 1 or list.index($feature-list, "text")) {
          .#{$prefix}#{$branch-name}-#{$sname}-text {
            @if $vars {
              color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
            } @else {
              color: $scolor !important;
            }
          }
        }

        @if not list.index($branch-name, "gradient") and (list.length($feature-list) < 1 or list.index($feature-list, "border")) {
          @if $vars {
            .#{$prefix}#{$branch-name}-#{$sname}-border {
              border-color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
            }
          } @else {
            .#{$prefix}#{$branch-name}-#{$sname}-border {
              border-color: $scolor !important;
            }
          }
        }

        @if list.length($feature-list) < 1 or list.index($feature-list, "background") {
          @if $vars {
            .#{$prefix}#{$branch-name}-#{$sname}-bg {
              background-color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
              color: var(--#{$prefixV}on-#{$branch-name}-#{$sname}) !important;
            }
          } @else {
            .#{$prefix}#{$branch-name}-#{$sname}-bg {
              background-color: $scolor !important;
            }
          }
        }

        @if list.length($feature-list) < 1 or list.index($feature-list, "pseudo") {
          @if $vars {
            .#{$prefix}#{$branch-name}-#{$sname}-pseudo-bg {
              &::after,
              &::before {
                background-color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
              }
            }
          } @else {
            .#{$prefix}#{$branch-name}-#{$sname}-pseudo-bg {
              &::after,
              &::before {
                background-color: $scolor !important;
              }
            }
          }
        }

        @if list.length($feature-list) < 1 or list.index($feature-list, "hover") {

          @if not list.index($branch-name, "gradient") and (list.length($feature-list) < 1 or list.index($feature-list, "text")) {
            @if $vars {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-text {
                &:hover {
                  color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
                }
              }
            } @else {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-text {
                &:hover {
                  color: $scolor !important;
                }
              }
            }
          }

          @if not list.index($branch-name, "gradient") and (list.length($feature-list) < 1 or list.index($feature-list, "border")) {
            @if $vars {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-border {
                &:hover {
                  border-color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
                }
              }
            } @else {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-border {
                &:hover {
                  border-color: $scolor !important;
                }
              }
            }
          }

          @if list.length($feature-list) < 1 or list.index($feature-list, "background") {
            @if $vars {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-bg {
                &:hover {
                  background-color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
                  color: var(--#{$prefixV}on-#{$branch-name}-#{$sname}) !important;
                }
              }
            } @else {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-bg {
                &:hover {
                  background-color: $scolor !important;
                }
              }
            }
          }

          @if list.length($feature-list) < 1 or list.index($feature-list, "pseudo") {
            @if $vars {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-pseudo-bg {
                &:hover {
                  &::after,
                  &::before {
                    background-color: var(--#{$prefixV}#{$branch-name}-#{$sname}) !important;
                  }
                }
              }
            } @else {
              .#{$prefix}#{$branch-name}-#{$sname}-hover-pseudo-bg {
                &:hover {
                  &::after,
                  &::before {
                    background-color: $scolor !important;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

